package uk.co.automatictester.ecdsa;

import org.testng.annotations.Test;

import java.nio.charset.StandardCharsets;
import java.security.*;
import java.security.spec.ECGenParameterSpec;

import static org.assertj.core.api.Assertions.assertThat;

public class ECDSATest {

    @Test
    public void verifyECDSAVulnerability() throws InvalidAlgorithmParameterException, NoSuchAlgorithmException,
            SignatureException, InvalidKeyException {
        // get public key
        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("EC");
        ECGenParameterSpec ecGenParameterSpec = new ECGenParameterSpec("secp256r1");
        keyPairGenerator.initialize(ecGenParameterSpec);
        KeyPair keyPair = keyPairGenerator.generateKeyPair();
        PublicKey publicKey = keyPair.getPublic();

        // get invalid (zero-ed) signature
        byte[] invalidSignature = new byte[64];

        // verify signature
        Signature signature = Signature.getInstance("SHA256WithECDSAInP1363Format");
        signature.initVerify(publicKey);
        byte[] plaintext = "Lorem ipsum dolor sit amet".getBytes(StandardCharsets.UTF_8);
        signature.update(plaintext);
        boolean isValid = signature.verify(invalidSignature);

        // if this fails, your Java version is vulnerable
        assertThat(isValid).isFalse();
    }
}
